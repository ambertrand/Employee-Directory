{"version":3,"sources":["Components/Header/index.js","utils/API.js","Components/TableContainer/index.js","Components/Search/index.js","utils/Utility.js","Components/Directory/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","API","axios","get","EmployeeTable","props","TableContainer","component","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableSortLabel","active","orderBy","direction","order","onClick","handleSort","TableBody","employees","map","emp","hover","alt","firstName","lastName","src","image","phone","email","id","SearchForm","TextField","color","variant","label","type","name","onChange","handleInputChange","util","value","empArray","filter","toLowerCase","includes","key","a","b","optionA","toUpperCase","optionB","comparison","Directory","state","renderedEmployees","search","event","target","setState","searchedEmps","col","sortedList","sort","list","then","response","employeeData","data","results","picture","medium","first","last","cell","catch","err","console","log","Grid","container","justify","Search","this","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.734222f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\n\r\nfunction Header() {\r\n    return(\r\n        <div className=\"header jumbotron text-center\">\r\n            <h1>Employee Directory</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst API = {\r\n    getEmployees: () => {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\r\n    }\r\n}\r\n\r\nexport { API }","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './style.css';\r\n\r\n\r\n\r\nfunction EmployeeTable(props) {\r\n    return (\r\n        <TableContainer className=\"tableStyle\" component={Paper}>\r\n            <Table stickyHeader aria-label=\"Employee Table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">Image</TableCell>\r\n                        <TableCell align=\"center\">First Name\r\n                            <TableSortLabel active={props.orderBy === \"firstName\"} direction={props.order} onClick={() => props.handleSort(\"firstName\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">Last Name\r\n                            <TableSortLabel active={props.orderBy === \"lastName\"} direction={props.order} onClick={() => props.handleSort(\"lastName\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">Phone Number</TableCell>\r\n                        <TableCell align=\"center\">Email\r\n                            <TableSortLabel active={props.orderBy === \"email\"} direction={props.order} onClick={() => props.handleSort(\"email\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {\r\n                        props.employees.map(emp => {\r\n                            return <TableRow hover key={emp.id}>\r\n                                <TableCell align=\"center\"><img alt={`${emp.firstName} ${emp.lastName}`} src={emp.image} /></TableCell>\r\n                                <TableCell align=\"center\">{emp.firstName}</TableCell>\r\n                                <TableCell align=\"center\">{emp.lastName}</TableCell>\r\n                                <TableCell align=\"center\">{emp.phone}</TableCell>\r\n                                <TableCell align=\"center\">{emp.email}</TableCell>\r\n                            </TableRow>\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './style.css';\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <TextField className=\"searchBox\" color=\"secondary\" variant=\"outlined\" label=\"Search Here\" type=\"search\" name=\"search\" onChange={props.handleInputChange} />\r\n    )\r\n}\r\n\r\nexport default SearchForm;","const util = {\r\n\r\n    // Check employee array to find item matching in search\r\n    searchEmployees: (value, empArray) => {\r\n        let queriedEmp = empArray.filter((emp) => {\r\n            return emp.firstName.toLowerCase().includes(value.toLowerCase()) ||\r\n            emp.lastName.toLowerCase().includes(value.toLowerCase()) ||\r\n            emp.phone.toLowerCase().includes(value.toLowerCase()) ||\r\n            emp.email.toLowerCase().includes(value.toLowerCase())\r\n        })\r\n        return queriedEmp;\r\n    },\r\n\r\n    // Function to compare values in array and sort by ascend or decend\r\n    compareValues: (key, order = \"asc\") => {\r\n        return function compare(a, b) {\r\n            // Using toUpperCase to ignore char casing\r\n            const optionA = a[key].toUpperCase();\r\n            const optionB = b[key].toUpperCase();\r\n\r\n            let comparison = 0;\r\n            if (optionA > optionB) {\r\n                comparison = 1;\r\n            } else if (optionA < optionB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === \"desc\") ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\nexport { util }","import React from 'react';\r\nimport Header from '../Header';\r\nimport { API } from '../../utils/API';\r\nimport EmployeeTable from '../TableContainer';\r\nimport SearchForm from '../Search';\r\nimport { util } from \"../../utils/Utility\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass Directory extends React.Component {\r\n    state = {\r\n        employees: [],\r\n        renderedEmployees: [],\r\n        search: \"\",\r\n        orderBy: \"\",\r\n        order: \"asc\"\r\n    }\r\n\r\n    // get employee data\r\n    componentDidMount() {\r\n        API.getEmployees()\r\n            .then((response) => {\r\n                \r\n                let employeeData = response.data.results.map(emp => {\r\n                    return {\r\n                        id: emp.id.value,\r\n                        image: emp.picture.medium,\r\n                        firstName: emp.name.first,\r\n                        lastName: emp.name.last,\r\n                        phone: emp.cell,\r\n                        email: emp.email,\r\n                    }\r\n                })\r\n                this.setState({\r\n                    employees: employeeData,\r\n                    renderedEmployees: employeeData\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // Function to allow user to search the employee directory\r\n    handleInputChange = event => {\r\n        let value = event.target.value;\r\n        const name = event.target.name;\r\n        // Set the state to that of input\r\n        this.setState({\r\n            [name]: value\r\n        }, () => {\r\n            if (this.state.search) {\r\n                let searchedEmps = util.searchEmployees(this.state.search, this.state.renderedEmployees);\r\n                this.setState({\r\n                    employees: searchedEmps,\r\n                    orderBy: \"\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    employees: this.state.renderedEmployees,\r\n                    orderBy: \"\"\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    // Function to allow user to sort directory\r\n    handleSort = (col, order) => {\r\n        let sortedList = [...this.state.employees].sort(util.compareValues(col, order));\r\n        let list = order === \"asc\" ? \"desc\" : \"asc\"\r\n        this.setState({\r\n            employees: sortedList,\r\n            order: list,\r\n            orderBy: col\r\n        });\r\n    }\r\n\r\n\r\n    // Render table component with current state\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Grid container justify=\"center\">\r\n                    <SearchForm employees={this.state.employees} handleInputChange={this.handleInputChange} />\r\n                </Grid>\r\n                <EmployeeTable employees={this.state.employees} handleSort={this.handleSort} orderBy={this.state.orderBy} order={this.state.order} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Directory;","import Directory from './Components/Directory';\n\n\nfunction App() {\n  return (\n    <div>\n      <Directory />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}